{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","category","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2NAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EACPC,mBAAS,IADF,mBACpCC,EADoC,KACxBC,EADwB,KAc3C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCJlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QARxB,kBAWXM,GAXW,4CAAH,sDCANO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECFZ,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAW,WACPxB,EAAOC,GACFwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAOkB,EACPL,SAAS,SAG1B,CAACpB,IAEGqB,EDN0BK,CAAa1B,GAAlC2B,EATwB,EAS7BpB,KAAea,EATc,EASdA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,qDAAb,yBACZ,qBAAKA,UAAU,YAAf,SACSW,EAASlB,KAAI,SAAAb,GAAK,OACf,cAAC,EAAD,eAEIA,GADGA,EAAMe,aEQtBiB,EA5BM,WAAO,IAAD,EAEY1C,mBAAS,CAAC,cAFtB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KASvB,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,aAAgBA,IAC7B,uBAEA,6BACK4C,EAAWpB,KAAK,SAAAqB,GAAQ,OAEjB,cAAC,EAAD,CAEC9B,UAAW8B,GADNA,YChBpBC,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.f53be066.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategoria}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length >2 ){\n            setCategoria(cats => [inputValue,...cats]);\n            setInputValue('');\n        }        \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategoria: PropTypes.func.isRequired\n};","\n\nexport const getGif = async (categoria) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=eqrRqZa37OnUEj0YtCvhfdhcHRypTmX4`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url : img.images.downsized_medium.url    \n        }    \n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n\n    return (\n        <div className='card animate__animated animate__fadeInRight'>            \n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGif } from '../helpers/getGifs';\n\nexport const GifGrid = ({categoria}) => {\n\n    // const [images, setImages] = useState([]);\n\n    // useEffect(()=>{\n    //    getGif(categoria)\n    //         .then(setImages);\n    // },[categoria])\n\n    const {data:imagenes, loading} = useFetchGifs(categoria);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__bounce'>{categoria}</h3> \n            {loading && <p className='animate__animated animate__flash animate__infinite'>Cargando...</p>}\n            <div className=\"card-grid\">\n                    {imagenes.map(value=>(\n                        <GifGridItem \n                        key = {value.id}\n                        {...value}\n                        />\n                    ))}\n\n            </div>\n\n        </>\n    )\n\n}\n\nGifGrid.propTypes = {\n    categoria: PropTypes.string.isRequired\n}","import { useEffect, useState } from \"react\"\nimport { getGif } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (categoria) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGif(categoria)\n            .then(imgs => {\n                    setstate({\n                        data : imgs,\n                        loading: false\n                    })                           \n            })\n    }, [categoria])\n\n    return state;\n} ","import { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    \n    const [categorias, setCategoria] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setCategoria(['Example',...categorias]);\n    //     setCategoria(cats => ['Example',...cats]);\n    // }\n\n    return (\n    <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategoria = {setCategoria} />\n        <hr />\n        \n        <ol>\n            {categorias.map( category => \n                (\n                    <GifGrid\n                     key={category}\n                     categoria={category}\n                     />\n                ))}\n        </ol>\n    </>\n    );\n}\n\nexport default GifExpertApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nconst divRoot = document.querySelector('#root');\n \nReactDOM.render(<GifExpertApp />, divRoot);"],"sourceRoot":""}